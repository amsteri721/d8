<?php

/**
 * @file
 * Pulls the number of followers / subscribers / likes / etc. from several
 * social networks.
 */

/**
 * Implements hook_cron().
 */
function social_counters_cron() {
  // Pull data from all social networks.
  $config_storage_handler = \Drupal::entityManager()->getStorage('social_counters_config');
  $plugin_manager = \Drupal::service('plugin.manager.social_counters');
  $json_serializer = \Drupal::service('serialization.json');
  $data_storage_handler = \Drupal::entityManager()->getStorage('social_counters_data');
  $config_entities = $config_storage_handler->loadMultiple();
  $existed_data = $data_storage_handler->loadMultiple();

  // Go through all config entities and create/update data for each social counter.
  foreach ($config_entities as $entity) {
    $data_entity = NULL;

    // Get all existed data.
    foreach ($existed_data as $value) {
      foreach ($value->get('config')->getValue() as $data_config) {
        if ($entity->id() == $data_config['target_id']) {
          $data_entity = $value;
        }
      }
    }

    // Retrieve and save data.
    $plugin_id = $entity->plugin_id;
    $config = (object)$json_serializer::decode($entity->config);
    $plugin = $plugin_manager->createInstance($plugin_id, array('config' => $config));
    if (!empty($data_entity)) {
      $data_entity->counter = $plugin->getCount();
    }
    else {
      $data_entity = $data_storage_handler->create();
      $data_entity->config = $entity->id();
      $data_entity->counter = $plugin->getCount();
    }
    $data_entity->save();
  }
}

/**
 * Implements hook_ENTITY_TYPE_delete().
 */
function social_counters_social_counters_config_delete(Drupal\Core\Entity\EntityInterface $entity) {
  // Delete all data which is asociated with this configuration.
  $data_storage_handler = \Drupal::entityManager()->getStorage('social_counters_data');
  $data = \Drupal::entityQuery('social_counters_data')
    ->condition('config', $entity->id)
    ->execute();
  $data = $data_storage_handler->loadMultiple($data);
  $data_storage_handler->delete($data);
}
